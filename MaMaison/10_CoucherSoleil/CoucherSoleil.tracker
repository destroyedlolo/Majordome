-- Tracker du coucher effectif du soleil
--
-- remove some trace
-- This option is useful to avoid logging of very noisy topics
-->> quiet
--
-- Disable this trigger
--->> disabled
--
-- Publie l'état du suivi solaire.
-->> statustopic=%ClientID%/CoucherSoleil/status
--
-- On se base sur la production photo voltaïque
-->> listen=TeleInfoProd
--
-- On attend combien de valeurs de production nulle pour déterminer que
-- le soleil est couché ?
-- Comme la TéléInfo envoie ses valeurs toutes les secondes, on attend quasiment
-- 2 minutes
-->> howmany=120
--
-- Timers
-- ------
-- At start timer's time, the tracker become active.
-->> start=HeureDebutSurveillanceCoucherSoleil
-- At stop timer's time, the tracker become inactive.
-->> stop=HeureFinSurveillanceCoucherSoleil
--
-- Activated at startup
--->> activated
--
-- Enable / Disable by rendez-vous
-- It's possible to attach rendez-vous to enable / disable this tracker
-- It makes easier for a single action to enable / disable several trackers
-- As example, in my smarthome automation, winter season disables all
-- temperature saving tracker
--->> enableRDV=enabletracker
--->> disableRDV=disabletracker

-- Lua side Variables
-- ==================
-- MAJORDOME_Myself is automatically created and correspond to the current
-- tracker
-- MAJORDOME_TRACKER - tracker's name
-- MAJORDOME_TRACKER_STATUS - tracker's status

if tonumber(MAJORDOME_PAYLOAD) > 0 then
	SelLog.Log('I', "Le soleil n'est pas encore couché")
	return false
end

--[[
local tracker = MajordomeTracker.find("CoucherSoleil")
print("Tracker's counter is", tracker:getCounter())
]]

return true	-- Plus de production
